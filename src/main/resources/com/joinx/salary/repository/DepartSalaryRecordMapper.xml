<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.joinx.salary.repository.DepartSalaryRecordMapper">
  <resultMap id="BaseResultMap" type="com.joinx.salary.pojo.DepartSalaryRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="depart_ID" jdbcType="VARCHAR" property="departId" />
    <result column="salary_send_time" jdbcType="TIMESTAMP" property="salarySendTime" />
    <result column="salary_count" jdbcType="DECIMAL" property="salaryCount" />
    <result column="salary_basic_count" jdbcType="DECIMAL" property="salaryBasicCount" />
    <result column="endowment_insurance" jdbcType="DECIMAL" property="endowmentInsurance" />
    <result column="medicare" jdbcType="DECIMAL" property="medicare" />
    <result column="unemployment" jdbcType="DECIMAL" property="unemployment" />
    <result column="injury_insurance" jdbcType="DECIMAL" property="injuryInsurance" />
    <result column="rear_insurance" jdbcType="DECIMAL" property="rearInsurance" />
    <result column="reserved_fund" jdbcType="DECIMAL" property="reservedFund" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, depart_ID, salary_send_time, salary_count, salary_basic_count, endowment_insurance, 
    medicare, unemployment, injury_insurance, rear_insurance, reserved_fund
  </sql>
  <select flushCache="true" id="selectByExample" parameterType="com.joinx.salary.pojo.DepartSalaryRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from depart_salary_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from depart_salary_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from depart_salary_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.joinx.salary.pojo.DepartSalaryRecordExample">
    delete from depart_salary_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.joinx.salary.pojo.DepartSalaryRecord" useGeneratedKeys="true">
    insert into depart_salary_record (depart_ID, salary_send_time, salary_count, 
      salary_basic_count, endowment_insurance, medicare, 
      unemployment, injury_insurance, rear_insurance, 
      reserved_fund)
    values (#{departId,jdbcType=VARCHAR}, #{salarySendTime,jdbcType=TIMESTAMP}, #{salaryCount,jdbcType=DECIMAL}, 
      #{salaryBasicCount,jdbcType=DECIMAL}, #{endowmentInsurance,jdbcType=DECIMAL}, #{medicare,jdbcType=DECIMAL}, 
      #{unemployment,jdbcType=DECIMAL}, #{injuryInsurance,jdbcType=DECIMAL}, #{rearInsurance,jdbcType=DECIMAL}, 
      #{reservedFund,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.joinx.salary.pojo.DepartSalaryRecord" useGeneratedKeys="true">
    insert into depart_salary_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="departId != null">
        depart_ID,
      </if>
      <if test="salarySendTime != null">
        salary_send_time,
      </if>
      <if test="salaryCount != null">
        salary_count,
      </if>
      <if test="salaryBasicCount != null">
        salary_basic_count,
      </if>
      <if test="endowmentInsurance != null">
        endowment_insurance,
      </if>
      <if test="medicare != null">
        medicare,
      </if>
      <if test="unemployment != null">
        unemployment,
      </if>
      <if test="injuryInsurance != null">
        injury_insurance,
      </if>
      <if test="rearInsurance != null">
        rear_insurance,
      </if>
      <if test="reservedFund != null">
        reserved_fund,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="departId != null">
        #{departId,jdbcType=VARCHAR},
      </if>
      <if test="salarySendTime != null">
        #{salarySendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="salaryCount != null">
        #{salaryCount,jdbcType=DECIMAL},
      </if>
      <if test="salaryBasicCount != null">
        #{salaryBasicCount,jdbcType=DECIMAL},
      </if>
      <if test="endowmentInsurance != null">
        #{endowmentInsurance,jdbcType=DECIMAL},
      </if>
      <if test="medicare != null">
        #{medicare,jdbcType=DECIMAL},
      </if>
      <if test="unemployment != null">
        #{unemployment,jdbcType=DECIMAL},
      </if>
      <if test="injuryInsurance != null">
        #{injuryInsurance,jdbcType=DECIMAL},
      </if>
      <if test="rearInsurance != null">
        #{rearInsurance,jdbcType=DECIMAL},
      </if>
      <if test="reservedFund != null">
        #{reservedFund,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.joinx.salary.pojo.DepartSalaryRecordExample" resultType="java.lang.Long">
    select count(*) from depart_salary_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update depart_salary_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.departId != null">
        depart_ID = #{record.departId,jdbcType=VARCHAR},
      </if>
      <if test="record.salarySendTime != null">
        salary_send_time = #{record.salarySendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.salaryCount != null">
        salary_count = #{record.salaryCount,jdbcType=DECIMAL},
      </if>
      <if test="record.salaryBasicCount != null">
        salary_basic_count = #{record.salaryBasicCount,jdbcType=DECIMAL},
      </if>
      <if test="record.endowmentInsurance != null">
        endowment_insurance = #{record.endowmentInsurance,jdbcType=DECIMAL},
      </if>
      <if test="record.medicare != null">
        medicare = #{record.medicare,jdbcType=DECIMAL},
      </if>
      <if test="record.unemployment != null">
        unemployment = #{record.unemployment,jdbcType=DECIMAL},
      </if>
      <if test="record.injuryInsurance != null">
        injury_insurance = #{record.injuryInsurance,jdbcType=DECIMAL},
      </if>
      <if test="record.rearInsurance != null">
        rear_insurance = #{record.rearInsurance,jdbcType=DECIMAL},
      </if>
      <if test="record.reservedFund != null">
        reserved_fund = #{record.reservedFund,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update depart_salary_record
    set id = #{record.id,jdbcType=INTEGER},
      depart_ID = #{record.departId,jdbcType=VARCHAR},
      salary_send_time = #{record.salarySendTime,jdbcType=TIMESTAMP},
      salary_count = #{record.salaryCount,jdbcType=DECIMAL},
      salary_basic_count = #{record.salaryBasicCount,jdbcType=DECIMAL},
      endowment_insurance = #{record.endowmentInsurance,jdbcType=DECIMAL},
      medicare = #{record.medicare,jdbcType=DECIMAL},
      unemployment = #{record.unemployment,jdbcType=DECIMAL},
      injury_insurance = #{record.injuryInsurance,jdbcType=DECIMAL},
      rear_insurance = #{record.rearInsurance,jdbcType=DECIMAL},
      reserved_fund = #{record.reservedFund,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.joinx.salary.pojo.DepartSalaryRecord">
    update depart_salary_record
    <set>
      <if test="departId != null">
        depart_ID = #{departId,jdbcType=VARCHAR},
      </if>
      <if test="salarySendTime != null">
        salary_send_time = #{salarySendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="salaryCount != null">
        salary_count = #{salaryCount,jdbcType=DECIMAL},
      </if>
      <if test="salaryBasicCount != null">
        salary_basic_count = #{salaryBasicCount,jdbcType=DECIMAL},
      </if>
      <if test="endowmentInsurance != null">
        endowment_insurance = #{endowmentInsurance,jdbcType=DECIMAL},
      </if>
      <if test="medicare != null">
        medicare = #{medicare,jdbcType=DECIMAL},
      </if>
      <if test="unemployment != null">
        unemployment = #{unemployment,jdbcType=DECIMAL},
      </if>
      <if test="injuryInsurance != null">
        injury_insurance = #{injuryInsurance,jdbcType=DECIMAL},
      </if>
      <if test="rearInsurance != null">
        rear_insurance = #{rearInsurance,jdbcType=DECIMAL},
      </if>
      <if test="reservedFund != null">
        reserved_fund = #{reservedFund,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.joinx.salary.pojo.DepartSalaryRecord">
    update depart_salary_record
    set depart_ID = #{departId,jdbcType=VARCHAR},
      salary_send_time = #{salarySendTime,jdbcType=TIMESTAMP},
      salary_count = #{salaryCount,jdbcType=DECIMAL},
      salary_basic_count = #{salaryBasicCount,jdbcType=DECIMAL},
      endowment_insurance = #{endowmentInsurance,jdbcType=DECIMAL},
      medicare = #{medicare,jdbcType=DECIMAL},
      unemployment = #{unemployment,jdbcType=DECIMAL},
      injury_insurance = #{injuryInsurance,jdbcType=DECIMAL},
      rear_insurance = #{rearInsurance,jdbcType=DECIMAL},
      reserved_fund = #{reservedFund,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>